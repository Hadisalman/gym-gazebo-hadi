<launch>
  <arg name="gui" default="false" />	
  <!-- Load gazebo snake monster simulation by calling launch file and use the joint state publisher below instead of the one in this launch file -->
  <include file="$(find snake_monster)/launch/Gazebosnakemonstercam.launch">
    <arg name="run_state_publisher" value="false" />
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find snake_monster_control)/config/controllers.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/snake_monster" args="joint_state_controller L1_1_eff_pos_controller L1_2_eff_pos_controller L1_3_eff_pos_controller L2_1_eff_pos_controller L2_2_eff_pos_controller L2_3_eff_pos_controller L3_1_eff_pos_controller L3_2_eff_pos_controller L3_3_eff_pos_controller L4_1_eff_pos_controller L4_2_eff_pos_controller L4_3_eff_pos_controller L5_1_eff_pos_controller L5_2_eff_pos_controller L5_3_eff_pos_controller L6_1_eff_pos_controller L6_2_eff_pos_controller L6_3_eff_pos_controller xrot yrot"/>

  <!-- convert joint states to TF transforms for rviz -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <param name="publish_frequency" type="double" value="30.0" />
    <remap from="/joint_states" to="/snake_monster/joint_states" />
  </node>

  <!-- call with walk:=true to start walking controller node with gazebo -->
  <arg name="walk" default="false" />
  <group if="$(arg walk)">
    <node name="walking_controller" pkg="snake_monster_control" type="walking_controller.py" />
  </group>

  <!--<node name="rviz" pkg="rviz" type="rviz" args="-d $(find snake_monster)/urdf.rviz" />-->	
  
  <!-- <node name="control_messager" pkg="snake_monster_control" type="control_messager" /> -->
	  
</launch>
